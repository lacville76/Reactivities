{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUserName","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","loadUserActivities","activties","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","name","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","createdAt","comment","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","MyTextInput","props","useField","field","meta","Form","Field","touched","label","Label","basic","color","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","Header","textAlign","placeholder","type","render","marginBottom","fluid","ValidationErrors","Message","List","map","err","i","validationSchema","Yup","required","isValid","dirty","disabled","Segment","vertical","size","isLoggedIn","width","marginTop","attached","active","has","onChange","Reveal","animated","Content","visible","hidden","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","horizontal","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Group","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","Divider","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.eb7c2c8d.chunk.js","sourcesContent":["export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    data: T;\r\n    pagination: Pagination;\r\n\r\n    constructor(data: T, pagination: Pagination){\r\n        this.data = data;\r\n        this.pagination = pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams {\r\n    pageNumber;\r\n    pageSize;\r\n\r\n    constructor(pageNumber = 1, pageSize = 2){\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"../stores/store\";\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(config => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if (process.env.NODE_ENV === 'development') await sleep(1000);\r\n    const pagination = response.headers['pagination'];\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n}, (error: AxiosError) => {\r\n  const {data, status, config} = error.response!;\r\n  switch (status) {\r\n    case 400:\r\n      if (typeof data === 'string') {\r\n        toast.error(data);\r\n      }\r\n      if (config.method === 'get' && data.errors.hasOwnProperty('id'))  {\r\n        history.push('/not-found');\r\n      }\r\n      if (data.errors) {\r\n        const modalStateErrors = [];\r\n        for (const key in data.errors) {\r\n          if (data.errors[key]) {\r\n            modalStateErrors.push(data.errors[key]);\r\n          }\r\n        }\r\n        throw modalStateErrors.flat();\r\n      } else {\r\n        toast.error(data);\r\n      }\r\n      break;\r\n    case 401: \r\n      toast.error('unauthorized');\r\n      break; \r\n    case 404: \r\n      history.push('/not-found');\r\n      break;\r\n    case 500: \r\n      store.commonStore.setServerError(data);\r\n      history.push('/server-error');\r\n      break; \r\n  }\r\n  return Promise.reject(error)\r\n});\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  delete: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>(\"/activities\", {params})\r\n    .then(responseBody),\r\n  details: (id:string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (activity: ActivityFormValues) => requests.post<void>('activities',activity),\r\n  update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.delete<void>(`/activities/${id}`),\r\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {})\r\n};\r\n\r\nconst Account = {\r\n  current: () => requests.get<User>('/account'),\r\n  login: (user: UserFormValues) => requests.post<User>('/account/login', user),\r\n  register: (user: UserFormValues) => requests.post<User>('/account/register', user),\r\n}\r\n\r\nconst Profiles = {\r\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n  uploadPhoto: (file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append('File', file);\r\n    return axios.post<Photo>('photos', formData, {\r\n      headers: {'Content-type': 'multipart/form-data'}\r\n    })\r\n  },\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.delete(`/photos/${id}`),\r\n  updateProfile: (profile: Partial<Profile>) => requests.put(`/profiles`, profile),\r\n  updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\r\n  listFollowings: (username: string, predicate: string) => \r\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n  listActivities: (username: string, predicate: string) => \r\n    requests.get<UserActivity[]>(`/profiles/${username}/activities/?predicate=${predicate}`)\r\n}\r\n\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n  Profiles\r\n};\r\n\r\nexport default agent;\r\n","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  title: string;\r\n  date: Date | null;\r\n  description: string;\r\n  category: string;\r\n  city: string;\r\n  venue: string;\r\n  hostUserName?: string;\r\n  isCancelled?: boolean;\r\n  isGoing: boolean;\r\n  isHost: boolean;\r\n  host?: Profile;\r\n  attendees: Profile[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n  constructor(init?: ActivityFormValues) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n  id?: string = undefined;\r\n  title: string = '';\r\n  category: string = '';\r\n  description: string = '';\r\n  date: Date | null = null;\r\n  city: string = '';\r\n  venue: string = '';\r\n\r\n  constructor (activity?: ActivityFormValues) {\r\n    if (activity) {\r\n      this.id = activity.id;\r\n      this.title = activity.title;\r\n      this.category = activity.category;\r\n      this.description = activity.description;\r\n      this.date = activity.date;\r\n      this.venue = activity.venue;\r\n      this.city = activity.city;\r\n    }\r\n  }\r\n}","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n    username: string;\r\n    displayName: string;\r\n    image?: string;\r\n    bio?: string;\r\n    followersCount: number;\r\n    followingCount: number;\r\n    following: boolean;\r\n    photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n    constructor(user: User) {\r\n        this.username = user.username;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n    }\r\n}\r\n\r\nexport interface Photo {\r\n    id: string;\r\n    url: string;\r\n    isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n    id: string;\r\n    title: string;\r\n    category: string;\r\n    date: Date;\r\n}","import agent from \"../api/agent\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { format } from 'date-fns';\r\nimport { store } from \"./store\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\n\r\nexport default class ActivityStore {\r\n    activityRegistry = new Map<string, Activity>();\r\n    selectedActivity: Activity | undefined = undefined;\r\n    editMode = false;\r\n    loading = false;\r\n    loadingInitial = false;\r\n    pagination: Pagination | null = null;\r\n    pagingParams = new PagingParams();\r\n    predicate = new Map().set('all', true);\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n        reaction(\r\n            () => this.predicate.keys(), \r\n            () => {\r\n                this.pagingParams = new PagingParams();\r\n                this.activityRegistry.clear();\r\n                this.loadActivities();\r\n            }\r\n        )\r\n    }\r\n\r\n    setPagingParams = (pagingParams: PagingParams) => {\r\n        this.pagingParams = pagingParams;\r\n    }\r\n\r\n    setPredicate = (predicate: string, value: string | Date) => {\r\n        const resetPredicate = () => {\r\n            this.predicate.forEach((value, key) => {\r\n                if (key !== 'startDate') this.predicate.delete(key);\r\n            })\r\n        }\r\n        switch (predicate) {\r\n            case 'all':\r\n                resetPredicate();\r\n                this.predicate.set('all', true);\r\n                break;\r\n            case 'isGoing':\r\n                resetPredicate();\r\n                this.predicate.set('isGoing', true);\r\n                break;\r\n            case 'isHost':\r\n                resetPredicate();\r\n                this.predicate.set('isHost', true);\r\n                break;\r\n            case 'startDate':\r\n                this.predicate.delete('startDate');\r\n                this.predicate.set('startDate', value);\r\n        }\r\n    }\r\n\r\n    get axiosParams() {\r\n        const params = new URLSearchParams();\r\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n        params.append('pageSize', this.pagingParams.pageSize.toString());\r\n        this.predicate.forEach((value, key) => {\r\n            if (key === 'startDate') {\r\n                params.append(key, (value as Date).toISOString())\r\n            } else {\r\n                params.append(key, value);\r\n            }\r\n        })\r\n        return params;\r\n    }\r\n\r\n    get activitiesByDate() {\r\n        return Array.from(this.activityRegistry.values()).sort((a, b) => a.date!.getTime() - b.date!.getTime());\r\n    }\r\n\r\n    get groupedActivities() {\r\n        return Object.entries(this.activitiesByDate.reduce((activities, activity) => {\r\n                const date = format(activity.date!, 'dd MMM yyyy');\r\n                activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n                return activities; \r\n            }, {} as {[key: string]: Activity[]})\r\n        )\r\n    }\r\n\r\n    loadActivities = async () => {\r\n        this.loadingInitial = true;\r\n        try {\r\n            const result = await agent.Activities.list(this.axiosParams);\r\n            result.data.forEach(activity => this.setActivity(activity));\r\n            this.setPagination(result.pagination);\r\n            this.setLoadingInitial(false);\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.setLoadingInitial(false);\r\n        }\r\n    }\r\n\r\n    setPagination = (pagination: Pagination) => {\r\n        this.pagination = pagination;\r\n    }\r\n    \r\n    loadActivity = async (id: string) => {\r\n        let activity = this.getActivity(id);\r\n        if (activity) {\r\n            this.selectedActivity = activity;\r\n            return activity;\r\n        } else {\r\n            this.loadingInitial = true;\r\n            try {\r\n                activity = await agent.Activities.details(id);\r\n                this.setActivity(activity);\r\n                runInAction(() => {\r\n                    this.selectedActivity = activity;\r\n                })\r\n                this.setLoadingInitial(false);\r\n                return activity;\r\n            } catch (error) {\r\n                console.log(error);\r\n                this.setLoadingInitial(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setActivity = (activity: Activity) => {\r\n        const user = store.userStore.user;\r\n        if (user) {\r\n            activity.isGoing = activity.attendees!.some(\r\n                a => a.username === user.username\r\n            );\r\n            activity.isHost = activity.hostUserName === user.username;\r\n            activity.host = activity.attendees?.find(x => x.username === activity.hostUserName);\r\n        }\r\n        activity.date = new Date(activity.date!);\r\n        this.activityRegistry.set(activity.id, activity);\r\n    }\r\n\r\n    private getActivity = (id: string) => {\r\n        return this.activityRegistry.get(id);\r\n    }\r\n\r\n    setLoadingInitial = (state: boolean) => {\r\n        this.loadingInitial = state;\r\n    }\r\n\r\n    createActivity = async (activity: ActivityFormValues) => {\r\n        const user = store.userStore.user;\r\n        const attendee = new Profile(user!);\r\n        try {\r\n            await agent.Activities.create(activity);\r\n            const newActivity = new Activity(activity);\r\n            newActivity.hostUserName = user!.username;\r\n            newActivity.attendees = [attendee];\r\n            this.setActivity(newActivity);\r\n            runInAction(() => {\r\n                this.selectedActivity = newActivity;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    updateActivity = async (activity: ActivityFormValues) => {\r\n        try {\r\n            await agent.Activities.update(activity);\r\n            runInAction(() => {\r\n                if (activity.id) {\r\n                    let updatedActivity = {...this.getActivity(activity.id), ...activity}\r\n                    this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n                    this.selectedActivity = updatedActivity as Activity;      \r\n                }  \r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    deleteActivity = async (id: string) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.delete(id);\r\n            runInAction(() => {\r\n                this.activityRegistry.delete(id);\r\n                this.loading = false; \r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loading = false;          \r\n            });\r\n        }\r\n    }\r\n\r\n    updateAttendance = async () => {\r\n        const user = store.userStore.user;\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                if (this.selectedActivity?.isGoing) {\r\n                    this.selectedActivity.attendees = \r\n                        this.selectedActivity.attendees?.filter(a => a.username !== user?.username);\r\n                    this.selectedActivity.isGoing = false;\r\n                } else {\r\n                    const attendee = new Profile(user!);\r\n                    this.selectedActivity?.attendees?.push(attendee);\r\n                    this.selectedActivity!.isGoing = true;\r\n                }\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false)\r\n        }\r\n    }\r\n\r\n    cancelActivityToggle = async () => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    clearSelectedActivity = () => {\r\n        this.selectedActivity = undefined;\r\n    }\r\n\r\n    updateAttendeeFollowing = (username: string) => {\r\n        this.activityRegistry.forEach(activity => {\r\n            activity.attendees.forEach(attendee => {\r\n                if (attendee.username === username) {\r\n                    attendee.following ? attendee.followersCount-- : attendee.followersCount ++;\r\n                    attendee.following = !attendee.following;\r\n                }\r\n            })\r\n        })\r\n    }\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  followings: Profile[] = [];\r\n  loadingFollowings = false;\r\n  activeTab = 0;\r\n  userActivities: UserActivity[] = [];\r\n  loadingActivities = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      activeTab => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? 'followers' : 'following';\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  } \r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingProfile = false));\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.uploading = false));\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => (this.loading = false));\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos = this.profile?.photos?.filter(\r\n            (p) => p.id !== photo.id\r\n          );\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => (this.loading = false));\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateProfile = async (profile: Partial<Profile>) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.displayName &&\r\n          profile.displayName !== store.userStore.user?.displayName\r\n        ) {\r\n          store.userStore.setDisplayName(profile.displayName);\r\n        }\r\n        this.profile = { ...this.profile, ...(profile as Profile) };\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\r\n            following ? this.profile.followersCount++ : this.profile.followersCount--;\r\n            this.profile.following = !this.profile.following;\r\n        }\r\n        if( this.profile && this.profile.username === store.userStore.user?.username) {\r\n          following ? this.profile.followingCount++ : this.profile.followingCount--;\r\n        }\r\n        this.followings.forEach(profile => {\r\n            if (profile.username === username) {\r\n                profile.following ? profile.followersCount-- : profile.followersCount++;\r\n                profile.following = !profile.following;\r\n            }\r\n        });\r\n        this.loading = false;\r\n      })\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => this.loading = false)\r\n    }\r\n  }\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loadingFollowings = true;\r\n    try {\r\n      const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n        this.loadingFollowings = false;\r\n      })\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => this.loadingFollowings = false);\r\n    }\r\n  }\r\n\r\n  loadUserActivities = async (username: string, predicate?: string) => {\r\n    this.loadingActivities = true;\r\n    try {\r\n      const activties = await agent.Profiles.listActivities(username, predicate!);\r\n      runInAction(() => {\r\n        this.userActivities = activties;\r\n        this.loadingActivities = false;\r\n      })\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => this.loadingActivities = false);\r\n    }\r\n  }\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n    user: User | null = null;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    get isLoggedIn() {\r\n        return !!this.user;\r\n    }\r\n\r\n    login = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        } catch(error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/');\r\n    }\r\n\r\n    getUser = async () => {\r\n        try {\r\n            const user = await agent.Account.current();\r\n            runInAction(() => this.user = user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    register = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.register(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        } catch(error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    setImage = (image: string) => {\r\n        if (this.user) this.user.image = image;\r\n    }\r\n\r\n    setDisplayName = (name: string) => {\r\n        if (this.user) this.user.displayName = name;\r\n    }\r\n}","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\n\r\ninterface Store {\r\n    activityStore: ActivityStore;\r\n    commonStore: CommonStore;\r\n    userStore: UserStore;\r\n    modalStore: ModalStore,\r\n    profileStore: ProfileStore;\r\n    commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n    activityStore: new ActivityStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    profileStore: new ProfileStore(),\r\n    commentStore: new CommentStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext); \r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.token,\r\n            token => {\r\n                if (token) {\r\n                    window.localStorage.setItem('jwt', token);\r\n                }\r\n                else {\r\n                    window.localStorage.removeItem('jwt');\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n\r\n    setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal {\r\n    open: boolean;\r\n    body: JSX.Element | null;\r\n}\r\nexport default class ModalStore {\r\n    modal: Modal = {\r\n        open: false,\r\n        body: null\r\n    }\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    openModal = (content: JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n    comments: ChatComment[] = [];\r\n    hubConnection: HubConnection | null = null;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    createHubConnection = (activityId: string) => {\r\n        if (store.activityStore.selectedActivity) {\r\n            this.hubConnection = new HubConnectionBuilder() \r\n                .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\r\n                    accessTokenFactory: () => store.userStore.user?.token!\r\n                })\r\n                .withAutomaticReconnect()\r\n                .configureLogging(LogLevel.Information)\r\n                .build();\r\n\r\n            this.hubConnection.start().catch(error => console.log(\"Error establishing the connection: \", error));\r\n\r\n            this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\r\n                runInAction(() => {\r\n                    comments.forEach(comments => {\r\n                        comments.createdAt = new Date(comments.createdAt + 'Z');\r\n                    })\r\n                    this.comments = comments\r\n                }); \r\n            });\r\n\r\n            this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\r\n                runInAction(() => {\r\n                    comment.createdAt = new Date(comment.createdAt);\r\n                    this.comments.unshift(comment);\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    stopHubConnection = () => {\r\n        this.hubConnection?.stop().catch(error => console.log('Error stopping connection', error));\r\n    }\r\n\r\n    clearComments = () => {\r\n        this.comments = [];\r\n        this.hubConnection?.stop().catch(error => console.log('Error stopping connection', error));\r\n    }\r\n\r\n    addComment = async (values: any) => {\r\n        values.activityId = store.activityStore.selectedActivity?.id;\r\n        try {\r\n            await this.hubConnection?.invoke('SendComment', values);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Menu, Image, Dropdown } from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer(function NavBar() {\r\n    const {userStore: {user, logout}} = useStore();\r\n    return <Menu inverted fixed=\"top\">\r\n        <Container>\r\n            <Menu.Item as={NavLink} to='/' exact header>\r\n                <img src=\"/assets/logo.png\" alt=\"logo\" style={{marginRight: '10px'}}></img>\r\n            </Menu.Item>\r\n            <Menu.Item as={NavLink} to='/activities' name=\"Activities\"></Menu.Item>\r\n            <Menu.Item as={NavLink} to='/errors' name=\"Errors\"></Menu.Item>\r\n            <Menu.Item>\r\n                <Button as={NavLink} to='/createActivity' positive content='Create Activity'></Button>\r\n            </Menu.Item>\r\n            <Menu.Item position='right'>\r\n                <Image src={user?.image || '/assets/user.png'} avatar spaced='right'/>\r\n                <Dropdown pointing='top left' text={user?.displayName}>\r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item as={Link} to={`/profiles/${user?.username}`} text='My profile' icon='user'/>\r\n                        <Dropdown.Item onClick={logout} text='Logout' icon='power'/>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </Menu.Item>\r\n        </Container>\r\n    </Menu>;\r\n});\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  type?: string;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function LoginForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\", error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .login(values)\r\n          .catch((error) => setErrors({ error: \"Invalid email or password\" }))\r\n      }\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header as='h2' content='Login to Reactivities' color='teal' textAlign='center'/>\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage \r\n            name='error' render={() => <Label style={{marginBottom: 10}} basic color='red' content={errors.error}/>}\r\n          />\r\n          <Button\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Login\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    errors: any;\r\n}\r\nexport default function ValidationErrors({errors}: Props) {\r\n    return (\r\n        <Message error>\r\n            {errors && (\r\n                <Message.List>\r\n                    {errors.map((err:any, i: any) => (\r\n                        <Message.Item key={i}>{err}</Message.Item>\r\n                    ))}\r\n                </Message.List>\r\n            )}\r\n        </Message>\r\n    )\r\n}","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from 'yup';\r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\n\r\nexport default observer(function RegisterForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{displayName: \"\", username: \"\", email: \"\", password: \"\", error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .register(values)\r\n          .catch((error) => setErrors({ error }))\r\n      }\r\n      validationSchema={Yup.object({\r\n          displayName: Yup.string().required(),\r\n          username: Yup.string().required(),\r\n          email: Yup.string().required().email(),\r\n          password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form className=\"ui form error\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header as='h2' content='Sing up to Reactivities' color='teal' textAlign='center'/>\r\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\r\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage \r\n            name='error' render={() => <ValidationErrors errors={errors.error}/>}\r\n          />\r\n          <Button\r\n            disabled={!isValid || !dirty || isSubmitting}\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Register\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Header, Segment, Image, Button } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport LoginForm from '../users/LoginForm';\r\nimport RegisterForm from '../users/RegisterForm';\r\n\r\nexport default observer(function HomePage() {\r\n    const {userStore, modalStore} = useStore();\r\n\r\n    return (\r\n        <Segment inverted textAlign='center' vertical className='masthead'>\r\n            <Container text>\r\n                <Header as='h1' inverted>\r\n                    <Image size='massive' src='/assets/logo.png' alt='logo' style={{marginBottom: 12}} />\r\n                    Reactivities\r\n                </Header>\r\n                {userStore.isLoggedIn ? (\r\n                    <>\r\n                        <Header as='h2' inverted content='Welcome to Reactivities'/>\r\n                        <Button as={Link} to='/activities' size='huge' inverted>\r\n                            Go to Activities!\r\n                        </Button>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Button onClick={() => modalStore.openModal(<LoginForm/>)} size='huge' inverted>\r\n                            Login!\r\n                        </Button>\r\n                        <Button onClick={() => modalStore.openModal(<RegisterForm/>)} size='huge' inverted>\r\n                            Register!\r\n                        </Button>\r\n                    </>\r\n                )}\r\n            </Container>\r\n        </Segment>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function ActivityFilters() {\r\n  const {\r\n    activityStore: { predicate, setPredicate },\r\n  } = useStore();\r\n  return (\r\n    <>\r\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 25 }}>\r\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\r\n        <Menu.Item\r\n          content=\"All activities\"\r\n          active={predicate.has(\"all\")}\r\n          onClick={() => setPredicate(\"all\", \"true\")}\r\n        ></Menu.Item>\r\n        <Menu.Item\r\n          content=\"I'm going\"\r\n          active={predicate.has(\"isGoing\")}\r\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n        ></Menu.Item>\r\n        <Menu.Item\r\n          content=\"I'm hosting\"\r\n          active={predicate.has(\"isHost\")}\r\n          onClick={() => setPredicate(\"isHost\", \"true\")}\r\n        ></Menu.Item>\r\n      </Menu>\r\n      <Header />\r\n      <Calendar\r\n        onChange={(date: Date) => setPredicate(\"startDate\", date as Date)}\r\n        value={predicate.get(\"startDate\") || new Date()}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateFollowing, loading } = profileStore;\r\n\r\n  if (userStore.user?.username === profile.username) return null;\r\n\r\n  function handleFollow(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n    profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\r\n  }\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button fluid color=\"teal\" content={profile.following ? 'Following' : 'Not following'}></Button>\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n          loading={loading}\r\n          onClick={(e) => handleFollow(e, profile.username)}\r\n        ></Button>\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n  function truncate(str: string | undefined) {\r\n    if (str) {\r\n      return str.length > 40 ? str.substring(0, 37) + \"...\" : str;\r\n    }\r\n  }\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || \"/assets/user.png\"}></Image>\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\"></Icon>{profile.followersCount} followers\r\n      </Card.Content>\r\n      <FollowButton profile={profile}></FollowButton>\r\n    </Card>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { List, Image, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport ProfileCard from \"../../profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n  attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({\r\n  attendees,\r\n}: Props) {\r\n\r\n  const styles = {\r\n    borderColor: 'orange',\r\n    borderWidth: 3\r\n  }\r\n\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map((attendee) => (\r\n        <Popup\r\n          hoverable\r\n          key={attendee.username}\r\n          trigger={\r\n            <List.Item\r\n              key={attendee.username}\r\n              as={Link}\r\n              to={`/profiles/${attendee.username}`}\r\n            >\r\n              <Image\r\n                size=\"mini\"\r\n                circular\r\n                src={attendee.image || \"/assets/user.png\"}\r\n                bordered\r\n                style={attendee.following ? styles : null}\r\n              ></Image>\r\n            </List.Item>\r\n          }\r\n        >\r\n          <Popup.Content>\r\n            <ProfileCard profile={attendee}></ProfileCard>\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { format } from 'date-fns';\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default function ActivityListItem({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {activity.isCancelled && \r\n          <Label attached='top' color='red' content='Cancelled' style={{textAlign: 'center'}}/>\r\n        }\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image style={{marginBottom: 3}}size=\"tiny\" circular src={activity.host?.image || \"/assets/user.png\"}/>\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>Hosted by <Link to={`profiles/${activity.hostUserName}`}>{activity.host?.displayName}</Link></Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color='orange'>\r\n                    You are hosting this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color='green'>\r\n                    You are going to this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name='clock'/> {format(activity.date!,'dd MMM yyyy h:mm aa')}\r\n          <Icon name='marker'/> {activity.venue}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ActivityListItemAttendee attendees={activity.attendees!}></ActivityListItemAttendee>\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button as={Link} to={`activities/${activity.id}`} color='teal' floated='right' content='view'/>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer(function ActivityList() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"teal\">\r\n            {group}\r\n          </Header>\r\n          {activities.map((activity) => (\r\n            <ActivityListItem key={activity.id} activity={activity} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 25 }}>\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\nexport default observer(function ActivityDashboard() {\r\n  const { activityStore } = useStore();\r\n  const { loadActivities, activityRegistry, setPagingParams, pagination } =\r\n    activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activityRegistry.size <= 1) {\r\n      loadActivities();\r\n    }\r\n  }, [activityRegistry.size, loadActivities]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        {activityStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <ActivityListItemPlaceholder />\r\n            <ActivityListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={\r\n              !loadingNext &&\r\n              !!pagination &&\r\n              pagination.currentPage < pagination.totalPages\r\n            }\r\n            initialLoad={false}\r\n          >\r\n            <ActivityList></ActivityList>\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters></ActivityFilters>\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext}></Loader>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    inverted?: boolean;\r\n    content?: string\r\n}\r\n\r\nexport default function LoadingComponent({inverted = true, content = 'Loading...'}: Props) {\r\n    return(\r\n        <Dimmer active={true} inverted={inverted}>\r\n            <Loader content={content}></Loader>\r\n        </Dimmer>\r\n    )\r\n}","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  rows: number;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select \r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e, d) => helpers.setValue(d.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","export const categoryOptions = [\r\n    {text: 'Drinks', value: 'drinks'},\r\n    {text: 'Culture', value: 'culture'},\r\n    {text: 'Film', value: 'film'},\r\n    {text: 'Food', value: 'food'},\r\n    {text: 'Music', value: 'music'},\r\n    {text: 'Travel', value: 'travel'},\r\n]","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, {ReactDatePickerProps} from 'react-datepicker';\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n    <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={field.value && (new Date(field.value) || null)}\r\n        onChange={value => helpers.setValue(value)}\r\n    />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { Segment, Button, Header } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from '../../../app/common/form/MyTextInput';\r\nimport MyTextArea from '../../../app/common/form/MyTextArea';\r\nimport MySelectInput from '../../../app/common/form/MySelectInput';\r\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\r\nimport MyDateInput from '../../../app/common/form/MyDateInput';\r\nimport { ActivityFormValues } from '../../../app/models/activity';\r\nimport { v4 as uuid} from 'uuid';\r\n\r\n\r\nexport default observer (function ActivityForm() {\r\n    const history = useHistory();\r\n    const {activityStore} = useStore();\r\n    const {createActivity, updateActivity, loadActivity, loadingInitial} = activityStore;\r\n    const {id} = useParams<{id: string}>();\r\n\r\n    const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n    useEffect(() => {\r\n        if (id) { loadActivity(id).then(activity => setActivity(new ActivityFormValues(activity))) }\r\n    }, [id, loadActivity]);\r\n\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required('The activity title is required'),\r\n        description: Yup.string().required('The activity description is required'),\r\n        category: Yup.string().required(),\r\n        date: Yup.string().required('Date is required').nullable(),\r\n        venue: Yup.string().required(),\r\n        city: Yup.string().required(),\r\n    });\r\n\r\n    function handleFormSubmit(activity: ActivityFormValues) {\r\n        if(!activity.id) {\r\n            let newActivity = {\r\n                ...activity,\r\n                id: uuid()\r\n            }\r\n            createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`));\r\n        } else {\r\n            updateActivity(activity).then(() => history.push(`/activities/${activity.id}`));\r\n        };\r\n    }\r\n\r\n    if (loadingInitial) return <LoadingComponent content='Loading activity...'></LoadingComponent>\r\n\r\n    return(\r\n        <Segment clearing>\r\n            <Header content='Activity Details' sub color='teal'/>\r\n            <Formik \r\n                validationSchema={validationSchema}\r\n                enableReinitialize \r\n                initialValues={activity} \r\n                onSubmit={values => handleFormSubmit(values)}>\r\n                {({handleSubmit, isValid, isSubmitting, dirty}) => (\r\n                    <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete='off'>\r\n                        <MyTextInput name='title' placeholder='Title'/>\r\n                        <MyTextArea rows={3} placeholder=\"Description\" name=\"description\"></MyTextArea>\r\n                        <MySelectInput options={categoryOptions} placeholder=\"Category\" name=\"category\"></MySelectInput>\r\n                        <MyDateInput \r\n                            placeholderText=\"Date\" \r\n                            name=\"date\"\r\n                            showTimeSelect\r\n                            timeCaption='time'\r\n                            dateFormat='MMMM d, yyyy h:mm aa'>\r\n                        </MyDateInput>\r\n                        <Header content='Location Details' sub color='teal'/>\r\n                        <MyTextInput placeholder=\"City\" name=\"city\"></MyTextInput>\r\n                        <MyTextInput placeholder=\"Venue\" name=\"venue\"></MyTextInput>\r\n                        <Button \r\n                            disabled={isSubmitting || !dirty || !isValid}\r\n                            loading={isSubmitting} \r\n                            floated='right' \r\n                            positive type='submit' \r\n                            content='Submit'>\r\n                        </Button>\r\n                        <Button as={Link} to='/activities' floated='right' type='button' content='Cancel'></Button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </Segment>\r\n    )\r\n});","import { Formik, Form, Field, FieldProps } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as Yup from 'yup';\r\nimport { formatDistanceToNow } from \"date-fns\";\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n  const { commentStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [commentStore, activityId]);\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached clearing>\r\n      <Formik\r\n            onSubmit={(values, { resetForm }) =>\r\n              commentStore.addComment(values).then(() => resetForm())\r\n            }\r\n            initialValues={{ body: \"\" }}\r\n            validationSchema={Yup.object({\r\n              body: Yup.string().required()\r\n            })}\r\n          >\r\n            {({ isSubmitting, isValid, handleSubmit }) => (\r\n              <Form className='ui form'>\r\n                <Field name=\"body\">\r\n                  {(props: FieldProps) => (\r\n                    <div style={{position: 'relative'}}>\r\n                      <Loader active={isSubmitting}/>\r\n                      <textarea \r\n                        placeholder='Enter your comment (Enter to submit, SHIFT + enter for new line'\r\n                        rows={2}\r\n                        {...props.field}\r\n                        onKeyPress={e => {\r\n                          if (e.key === 'Enter' && e.shiftKey) {\r\n                            return;\r\n                          }\r\n                          if (e.key === 'Enter' && !e.shiftKey) {\r\n                            e.preventDefault();\r\n                            isValid && handleSubmit()\r\n                          }\r\n                        }}>\r\n                        </textarea>\r\n                    </div>\r\n                  )}\r\n                </Field>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        <Comment.Group>\r\n          {commentStore.comments.map((comment) => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n              <Comment.Content>\r\n                <Comment.Author\r\n                  as={Link}\r\n                  to={`/profiles/${comment.displayName}`}\r\n                >\r\n                  {comment.displayName}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style={{whiteSpace: 'pre-wrap'}}>{comment.body}</Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { format } from \"date-fns\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(30%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n  const {\r\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\r\n  } = useStore();\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\r\n            ribbon\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n          />\r\n        )}\r\n        <Image\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{format(activity.date!, \"dd MMM yyyy\")}</p>\r\n                <p>\r\n                  Hosted by{\" \"}\r\n                  <strong>\r\n                    <Link to={`/profiles/${activity.host?.username}`}>\r\n                      {activity.host?.displayName}\r\n                    </Link>\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <>\r\n            <Button\r\n              color={activity.isCancelled ? \"green\" : \"red\"}\r\n              floated=\"left\"\r\n              basic\r\n              content={\r\n                activity.isCancelled\r\n                  ? \"Re-activate Activity\"\r\n                  : \"Cancel Activity\"\r\n              }\r\n              onClick={cancelActivityToggle}\r\n              loading={loading}\r\n            />\r\n            <Button\r\n              as={Link}\r\n              disabled={activity.isCancelled}\r\n              to={`/manage/${activity.id}`}\r\n              color=\"orange\"\r\n              floated=\"right\"\r\n            >\r\n              Manage Event\r\n            </Button>\r\n          </>\r\n        ) : activity.isGoing ? (\r\n          <Button loading={loading} onClick={updateAttendance}>\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            disabled={activity.isCancelled}\r\n            loading={loading}\r\n            onClick={updateAttendance}\r\n            color=\"teal\"\r\n          >\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\nimport { format } from 'date-fns';\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size='large' color='teal' name='info'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{activity.description}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='calendar' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n            <span>\r\n              {format(activity.date!, 'dd MMM yyyy h:mm aa')}\r\n            </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='marker' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span>{activity.venue}, {activity.city}</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import React from \"react\";\r\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({ activity: {attendees, host} }: Props) {\r\n    if(!attendees) return null;\r\n    return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map(attendee => (\r\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\r\n                {attendee.username === host?.username && \r\n                <Label\r\n                    style={{ position: \"absolute\" }}\r\n                    color=\"orange\"\r\n                    ribbon=\"right\"\r\n                >\r\n                    Host\r\n                </Label>\r\n                }\r\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profiles/${attendee.username}`}>\r\n                    {attendee.displayName}\r\n                  </Link>\r\n                </Item.Header>\r\n                {attendee.following && \r\n                                <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivity,\r\n    loadingInitial,\r\n    clearSelectedActivity\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      loadActivity(id);\r\n      return () => clearSelectedActivity();\r\n    }\r\n  }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n  if (loadingInitial || !activity) {\r\n    return <LoadingComponent></LoadingComponent>;\r\n  }\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity}/>\r\n        <ActivityDetailedInfo activity={activity}/>\r\n        <ActivityDetailedChat activityId={activity.id}/>\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar activity={activity}/>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React, { useState } from 'react';\r\nimport {Button, Header, Segment} from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\nexport default function TestErrors() {\r\n    const baseUrl = process.env.REACT_APP_API_URL;\r\n    const [errors, setErrors] = useState(null);\r\n    function handleNotFound() {\r\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {errors && <ValidationErrors errors={errors}></ValidationErrors>}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Segment, Header, Icon, Button } from 'semantic-ui-react';\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search'/>\r\n                Oops = we've looked everywhere and could not find this.\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/activities' primary>\r\n                    Return to activities page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Container, Header, Segment } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default observer (function ServerError() {\r\n    const {commonStore} = useStore();\r\n    return (\r\n        <Container>\r\n            <Header as='h1' content='Server Error'></Header>\r\n            <Header sub as='h1' color='red' content={commonStore.error?.message}></Header>\r\n            {commonStore.error?.details &&\r\n                <Segment>\r\n                    <Header as='h4' content='Stack trace' color='teal'/>\r\n                    <code style={{marginTop: '10px'}}>{commonStore.error.details}</code>\r\n                </Segment>\r\n            }\r\n        </Container>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStore } from '../../stores/store';\r\n\r\nexport default observer(function ModalContainer() {\r\n    const {modalStore} = useStore();\r\n\r\n    return (\r\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\r\n            <Modal.Content>\r\n                {modalStore.modal.body}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n})","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from 'yup';\r\n\r\ninterface Props {\r\n    setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({setEditMode}: Props) {\r\n    const {profileStore: {profile, updateProfile}} = useStore();\r\n    return (\r\n        <Formik\r\n            initialValues={{displayName: profile?.displayName, bio: profile?.bio}}\r\n            onSubmit={values => {\r\n                updateProfile(values).then(() => {\r\n                    setEditMode(false);\r\n                })\r\n            }}\r\n            validationSchema={Yup.object({\r\n                displayName: Yup.string().required()\r\n            })}\r\n        >\r\n            {({isSubmitting, isValid, dirty}) => (\r\n                <Form className='ui form'>\r\n                    <MyTextInput placeholder='Display Name' name='displayName' />\r\n                    <MyTextArea rows={3} placeholder='Add your bio' name='bio' />\r\n                    <Button \r\n                        positive\r\n                        type='submit'\r\n                        loading={isSubmitting}\r\n                        content='Update profile'\r\n                        floated='right'\r\n                        disabled={!isValid || !dirty}\r\n                    />\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","import React, { useState } from \"react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\nimport { observer } from \"mobx-react-lite\";\r\nexport default observer(function ProfileAbout() {\r\n  const { profileStore } = useStore();\r\n  const { isCurrentUser, profile } = profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width=\"16\">\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={`About ${profile?.displayName}`}/>\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\r\n              onClick={() => setEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width=\"16\">\r\n          {editMode ? (\r\n            <ProfileEditForm setEditMode={setEditMode} />\r\n          ) : (\r\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React, { SyntheticEvent, useEffect } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserActivity } from '../../app/models/profile';\r\nimport { format } from 'date-fns';\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst panes = [\r\n    { menuItem: 'Future Events', pane: { key: 'future' } },\r\n    { menuItem: 'Past Events', pane: { key: 'past' } },\r\n    { menuItem: 'Hosting', pane: { key: 'hosting' } }\r\n];\r\n\r\nexport default observer(function ProfileActivities() {\r\n    const { profileStore } = useStore();\r\n    const {\r\n        loadUserActivities,\r\n        profile,\r\n        loadingActivities,\r\n        userActivities\r\n    } = profileStore;\r\n\r\n    useEffect(() => {\r\n        loadUserActivities(profile!.username);\r\n    }, [loadUserActivities, profile]);\r\n\r\n    const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n        loadUserActivities(profile!.username, panes[data.activeIndex as number].pane.key);\r\n    };\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingActivities}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='calendar' content={'Activities'} />\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Tab\r\n                        panes={panes}\r\n                        menu={{ secondary: true, pointing: true }}\r\n                        onTabChange={(e, data) => handleTabChange(e, data)}\r\n                    />\r\n                    <br />\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {userActivities.map((activity: UserActivity) => (\r\n                            <Card\r\n                                as={Link}\r\n                                to={`/activities/${activity.id}`}\r\n                                key={activity.id}\r\n                            >\r\n                                <Image\r\n                                    src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                                    style={{ minHeight: 100, objectFit: 'cover' }}\r\n                                />\r\n                                <Card.Content>\r\n                                    <Card.Header textAlign='center'>{activity.title}</Card.Header>\r\n                                    <Card.Meta textAlign='center'>\r\n                                        <div>{format(new Date(activity.date), 'do LLL')}</div>\r\n                                        <div>{format(new Date(activity.date), 'h:mm a')}</div>\r\n                                    </Card.Meta>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    );\r\n});","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileCard from './ProfileCard';\r\n\r\nexport default observer(function ProfileFollowings() {\r\n    const {profileStore} = useStore();\r\n    const {profile, followings, loadingFollowings, activeTab} = profileStore;\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingFollowings}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='user' \r\n                        content={activeTab === 3 ? `People following ${profile?.displayName}` : `People ${profile?.displayName} is following`}/>\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {followings.map(profile => (\r\n                            <ProfileCard key={profile.username} profile={profile}/>\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import React from 'react'\r\nimport { Cropper } from 'react-cropper'\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\ninterface Props {\r\n    imagePreview: string;\r\n    setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({imagePreview, setCropper}: Props) {\r\n    return (\r\n        <Cropper\r\n            src={imagePreview}\r\n            style={{height: 200, width: '100%'}}\r\n            initialAspectRatio={1}\r\n            aspectRatio={1}\r\n            preview='.img-preview'\r\n            guides={false}\r\n            viewMode={1}\r\n            autoCropArea={1}\r\n            background={false}\r\n            onInitialized={cropper => setCropper(cropper)}\r\n        />\r\n    )\r\n}","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\r\n    const dzStyles = {\r\n        border: 'dashed 3px #eee',\r\n        borderColor: '#eee',\r\n        borderRadius: '5px',\r\n        paddingTop: '30px',\r\n        textAlign: 'center' as 'center',\r\n        height: 200\r\n    }\r\n\r\n    const dzActive ={\r\n        borderColor: 'green'\r\n    }\r\n\r\n    const onDrop = useCallback((acceptedFiles) => {\r\n        setFiles(acceptedFiles.map((file:any) => Object.assign(file, {\r\n            preview: URL.createObjectURL(file)\r\n        })))\r\n    }, [setFiles]);\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n    return (\r\n    <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\r\n        <input {...getInputProps()} />\r\n        <Icon name='upload' size ='huge'/>\r\n        <Header content='Drop image here'/>               \r\n    </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\nexport default function PhotoUploadWidget({loading, uploadPhoto}: Props) {\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n      if (cropper) {\r\n          cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n        files.forEach((file: any) => URL.revokeObjectURL(file.preview))\r\n    }\r\n  }, [files])\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header color=\"teal\" content=\"Step 1 - Add Photo\"/>\r\n        <PhotoWidgetDropzone setFiles={setFiles}/>\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header color=\"teal\" content=\"Step 2 - Resize image\"/>\r\n        {files && files.length > 0 && (\r\n            <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview}/>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header color=\"teal\" content=\"Step 3 - Preview & Upload\"/>\r\n        {files && files.length >0 &&\r\n                <>\r\n                <div className='img-preview' style={{minHeight: 200, overflow: 'hidden'}}></div>\r\n                <Button.Group widths={2}>\r\n                    <Button loading={loading} onClick={onCrop} positive icon='check'></Button>\r\n                    <Button disabled={loading} onClick={() => setFiles([])} icon='close'></Button>\r\n                </Button.Group>\r\n            </>\r\n        }\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Card, Header, Tab, Image, Grid, Button } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n  const {\r\n    profileStore: {\r\n      isCurrentUser,\r\n      uploadPhoto,\r\n      uploading,\r\n      loading,\r\n      setMainPhoto,\r\n      deletePhoto,\r\n    },\r\n  } = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\"></Header>\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            ></Button>\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handlePhotoUpload}\r\n              loading={uploading}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url}></Image>\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                      <Button\r\n                        basic\r\n                        color=\"green\"\r\n                        loading={ target === 'main' + photo.id && loading}\r\n                        content=\"Main\"\r\n                        name={'main' + photo.id}\r\n                        disabled={photo.isMain}\r\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\r\n                      />\r\n                      <Button\r\n                        basic\r\n                        color=\"red\"\r\n                        loading={target === photo.id && loading}\r\n                        icon=\"trash\"\r\n                        disabled={photo.isMain}\r\n                        onClick={(e) => handleDeletePhoto(photo, e)}\r\n                        name={photo.id}\r\n                      />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Tab } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileActivities from './ProfileActivities';\r\nimport ProfileFollowings from './ProfileFollowings';\r\nimport ProfilePhotos from './ProfilePhotos';\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({profile}: Props) {\r\n    const {profileStore} = useStore();\r\n\r\n    const panes = [\r\n        {menuItem: 'About', render: () => <ProfileAbout/>},\r\n        {menuItem: 'Photos', render: () => <ProfilePhotos profile={profile}/>},\r\n        {menuItem: 'Events', render: () => <ProfileActivities/>},\r\n        {menuItem: 'Followers', render: () => <ProfileFollowings/>},\r\n        {menuItem: 'Following', render: () => <ProfileFollowings/>},\r\n    ];\r\n\r\n    return (\r\n        <Tab \r\n            menu={{fluid: true, vertical: true}}\r\n            menuPosition='right'\r\n            panes={panes}\r\n            onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n        >\r\n            \r\n        </Tab>\r\n    )\r\n});","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Divider, Grid, Header, Item, Segment, Statistic } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({profile}: Props) {\r\n  return(\r\n    <Segment>\r\n        <Grid>\r\n            <Grid.Column width={12}>\r\n                <Item.Group>\r\n                    <Item>\r\n                        <Item.Image avatar size=\"small\" src={profile.image || '/assets/user.png'}></Item.Image>\r\n                        <Item.Content verticalAlign=\"middle\">\r\n                            <Header as='h1' content={profile.displayName}/>\r\n                        </Item.Content>\r\n                    </Item>\r\n                </Item.Group>\r\n            </Grid.Column>\r\n            <Grid.Column width={4}>\r\n                <Statistic.Group widths={2}>\r\n                    <Statistic label='Followers' value={profile.followersCount}></Statistic>\r\n                    <Statistic label='Following' value={profile.followingCount}></Statistic>\r\n                </Statistic.Group>\r\n                <Divider/>\r\n                <FollowButton profile={profile}></FollowButton>\r\n            </Grid.Column>\r\n        </Grid>\r\n    </Segment>\r\n  )\r\n})\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer(function ProfilePage() {\r\n  const { username } = useParams<{ username: string }>();\r\n  const { profileStore } = useStore();\r\n  const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n    return () => {\r\n      setActiveTab(0);\r\n    }\r\n  }, [loadProfile, username, setActiveTab]);\r\n\r\n  if (loadingProfile)\r\n    return <LoadingComponent content=\"Loading profile...\"></LoadingComponent>;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {profile && (\r\n          <>\r\n            <ProfileHeader profile={profile}></ProfileHeader>\r\n            <ProfileContent profile={profile}></ProfileContent>\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\r\n    const {userStore: {isLoggedIn}} = useStore();\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to='/'/>}\r\n        />\r\n    )\r\n}","import { Container } from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport TestErrors from \"../../features/errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport { useStore } from \"../stores/store\";\nimport { useEffect } from \"react\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  const location = useLocation();\n  const {commonStore, userStore} = useStore();\n\n  useEffect(() => {\n    if(commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded) return <LoadingComponent content='Loading app...' />\n\n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" hideProgressBar></ToastContainer>\n      <ModalContainer/>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <>\n            <NavBar></NavBar>\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <PrivateRoute exact path=\"/activities\" component={ActivityDashboard} />\n                <PrivateRoute path=\"/activities/:id\" component={ActivityDetails} />\n                <PrivateRoute\n                  key={location.key}\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                />\n                <PrivateRoute path=\"/profiles/:username\" component={ProfilePage} />\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\n                <Route path=\"/server-error\" component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css'\nimport './app/layout/styles.css';\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value ={store}>\n    <Router history={history}> \n      <ScrollToTop/>\n      <App/>\n    </Router>\n  </StoreContext.Provider>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}